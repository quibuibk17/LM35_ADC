
LM35_ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000bce  00000c42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000c56  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cb4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cc6  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082e  00000000  00000000  00001a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000673  00000000  00000000  0000226c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e4  00000000  00000000  000028e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a9  00000000  00000000  000029c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000571  00000000  00000000  00002d6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  000032de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ec       	ldi	r30, 0xCE	; 206
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 02 01 	call	0x204	; 0x204 <main>
  7a:	0c 94 e5 05 	jmp	0xbca	; 0xbca <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ADC_Init>:
 */ 
#include "ADC.h"

void ADC_Init()
{
	ADC_Port &= ~(1 << ADC_Channel); //Set Port PA0 la input
  82:	d0 98       	cbi	0x1a, 0	; 26
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1);
  84:	86 b1       	in	r24, 0x06	; 6
  86:	86 68       	ori	r24, 0x86	; 134
  88:	86 b9       	out	0x06, r24	; 6
	ADCSRA &= ~(1 << ADPS0); // Enable ADC, Prescale is 64 (110)
  8a:	30 98       	cbi	0x06, 0	; 6
	ADMUX |= (1 << REFS0);
  8c:	3e 9a       	sbi	0x07, 6	; 7
	ADMUX &= ~(1 << REFS1); // Select reference voltage is AVCC pin, 5V
  8e:	3f 98       	cbi	0x07, 7	; 7
  90:	08 95       	ret

00000092 <ADC_Read>:
	//ADMUX &= ~(1 << MUX4) & ~(1 << MUX3) & ~(1 << MUX2) & ~(1 << MUX1) & ~(1 << MUX0); // Select ADC channel 0
}

int ADC_Read(char channel)
{
	ADMUX |= (channel & 0x0F); // Set input channel to read
  92:	97 b1       	in	r25, 0x07	; 7
  94:	8f 70       	andi	r24, 0x0F	; 15
  96:	98 2b       	or	r25, r24
  98:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1 << ADSC); // ADC start
  9a:	36 9a       	sbi	0x06, 6	; 6
	while(!(ADCSRA & (1 << ADIF))); // Wait until the end of conversion by polling ADID bit is 1
  9c:	34 9b       	sbis	0x06, 4	; 6
  9e:	fe cf       	rjmp	.-4      	; 0x9c <ADC_Read+0xa>
	ADCSRA |= (1 << ADIF); // Clear interrupt flag
  a0:	34 9a       	sbi	0x06, 4	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	8f e9       	ldi	r24, 0x9F	; 159
  a4:	9f e0       	ldi	r25, 0x0F	; 15
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <ADC_Read+0x14>
  aa:	00 c0       	rjmp	.+0      	; 0xac <ADC_Read+0x1a>
  ac:	00 00       	nop
	_delay_ms(1);
	return ADCW;
  ae:	84 b1       	in	r24, 0x04	; 4
  b0:	95 b1       	in	r25, 0x05	; 5
}
  b2:	08 95       	ret

000000b4 <LCD_Command>:
	LCD_Command(0x80); // Di chuyen con tro ve dau dong 1
}

void LCD_Command(unsigned char cmd)
{
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (cmd & 0xF0);
  b4:	92 b3       	in	r25, 0x12	; 18
  b6:	9f 70       	andi	r25, 0x0F	; 15
  b8:	28 2f       	mov	r18, r24
  ba:	20 7f       	andi	r18, 0xF0	; 240
  bc:	92 2b       	or	r25, r18
  be:	92 bb       	out	0x12, r25	; 18
	LCD_Command_Port &= ~(1 << RS);
  c0:	a8 98       	cbi	0x15, 0	; 21
	LCD_Command_Port |= (1 << EN);
  c2:	a9 9a       	sbi	0x15, 1	; 21
  c4:	ef e3       	ldi	r30, 0x3F	; 63
  c6:	ff e1       	ldi	r31, 0x1F	; 31
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Command+0x14>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Command+0x1a>
  ce:	00 00       	nop
	_delay_ms(2);
	LCD_Command_Port &= ~(1 << EN);
  d0:	a9 98       	cbi	0x15, 1	; 21
  d2:	ef e3       	ldi	r30, 0x3F	; 63
  d4:	ff e1       	ldi	r31, 0x1F	; 31
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <LCD_Command+0x22>
  da:	00 c0       	rjmp	.+0      	; 0xdc <LCD_Command+0x28>
  dc:	00 00       	nop
	_delay_ms(2);
	
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (cmd << 4);
  de:	22 b3       	in	r18, 0x12	; 18
  e0:	2f 70       	andi	r18, 0x0F	; 15
  e2:	f0 e1       	ldi	r31, 0x10	; 16
  e4:	8f 9f       	mul	r24, r31
  e6:	c0 01       	movw	r24, r0
  e8:	11 24       	eor	r1, r1
  ea:	82 2b       	or	r24, r18
  ec:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port |= (1 << EN);
  ee:	a9 9a       	sbi	0x15, 1	; 21
  f0:	8f e3       	ldi	r24, 0x3F	; 63
  f2:	9f e1       	ldi	r25, 0x1F	; 31
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <LCD_Command+0x40>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <LCD_Command+0x46>
  fa:	00 00       	nop
	_delay_ms(2);
	LCD_Command_Port &= ~(1 << EN);
  fc:	a9 98       	cbi	0x15, 1	; 21
  fe:	ef e3       	ldi	r30, 0x3F	; 63
 100:	ff e1       	ldi	r31, 0x1F	; 31
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x4e>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x54>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <LCD_Init>:

#include "LCD.h"

void LCD_Init(void)
{
	LCD_Command_Dir |= (1 << RS) | (1 << EN);
 10c:	84 b3       	in	r24, 0x14	; 20
 10e:	83 60       	ori	r24, 0x03	; 3
 110:	84 bb       	out	0x14, r24	; 20
	LCD_Data_Dir |= 0xF0;
 112:	81 b3       	in	r24, 0x11	; 17
 114:	80 6f       	ori	r24, 0xF0	; 240
 116:	81 bb       	out	0x11, r24	; 17
 118:	8f e3       	ldi	r24, 0x3F	; 63
 11a:	9f e1       	ldi	r25, 0x1F	; 31
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_Init+0x10>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_Init+0x16>
 122:	00 00       	nop
	_delay_ms(2);
	LCD_Command(0x01); //Xoa toan man hinh
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	LCD_Command(0x02); //Di chuyen con tro den dau man hinh
 12a:	82 e0       	ldi	r24, 0x02	; 2
 12c:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	LCD_Command(0x28); //Giao tiep 4 bit
 130:	88 e2       	ldi	r24, 0x28	; 40
 132:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	LCD_Command(0x06); //Di chuyen con tro den vi tri ke tiep moi khi xuat ra LCD 1 ki tu
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	LCD_Command(0x0C); //Bat hien thi va tat con tro
 13c:	8c e0       	ldi	r24, 0x0C	; 12
 13e:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	LCD_Command(0x80); // Di chuyen con tro ve dau dong 1
 142:	80 e8       	ldi	r24, 0x80	; 128
 144:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
 148:	08 95       	ret

0000014a <LCD_Char>:
	_delay_ms(2);
}

void LCD_Char(unsigned char data)
{
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (data & 0xF0);
 14a:	92 b3       	in	r25, 0x12	; 18
 14c:	9f 70       	andi	r25, 0x0F	; 15
 14e:	28 2f       	mov	r18, r24
 150:	20 7f       	andi	r18, 0xF0	; 240
 152:	92 2b       	or	r25, r18
 154:	92 bb       	out	0x12, r25	; 18
	LCD_Command_Port |= (1 << RS);
 156:	a8 9a       	sbi	0x15, 0	; 21
	LCD_Command_Port |= (1 << EN);
 158:	a9 9a       	sbi	0x15, 1	; 21
 15a:	ef e3       	ldi	r30, 0x3F	; 63
 15c:	ff e1       	ldi	r31, 0x1F	; 31
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <LCD_Char+0x14>
 162:	00 c0       	rjmp	.+0      	; 0x164 <LCD_Char+0x1a>
 164:	00 00       	nop
	_delay_ms(2);
	LCD_Command_Port &= ~(1 << EN);
 166:	a9 98       	cbi	0x15, 1	; 21
 168:	ef e3       	ldi	r30, 0x3F	; 63
 16a:	ff e1       	ldi	r31, 0x1F	; 31
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <LCD_Char+0x22>
 170:	00 c0       	rjmp	.+0      	; 0x172 <LCD_Char+0x28>
 172:	00 00       	nop
	_delay_ms(2);
	
	LCD_Data_Port = (LCD_Data_Port & 0x0F) | (data << 4);
 174:	22 b3       	in	r18, 0x12	; 18
 176:	2f 70       	andi	r18, 0x0F	; 15
 178:	f0 e1       	ldi	r31, 0x10	; 16
 17a:	8f 9f       	mul	r24, r31
 17c:	c0 01       	movw	r24, r0
 17e:	11 24       	eor	r1, r1
 180:	82 2b       	or	r24, r18
 182:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port |= (1 << EN);
 184:	a9 9a       	sbi	0x15, 1	; 21
 186:	8f e3       	ldi	r24, 0x3F	; 63
 188:	9f e1       	ldi	r25, 0x1F	; 31
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCD_Char+0x40>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <LCD_Char+0x46>
 190:	00 00       	nop
	_delay_ms(2);
	LCD_Command_Port &= ~(1 << EN);
 192:	a9 98       	cbi	0x15, 1	; 21
 194:	ef e3       	ldi	r30, 0x3F	; 63
 196:	ff e1       	ldi	r31, 0x1F	; 31
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <LCD_Char+0x4e>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <LCD_Char+0x54>
 19e:	00 00       	nop
 1a0:	08 95       	ret

000001a2 <LCD_String>:
	_delay_ms(2);
}

void LCD_String(char *str)
{
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	ec 01       	movw	r28, r24
	int i;
	for(i = 0; str[i] != 0; i++)
 1a8:	88 81       	ld	r24, Y
 1aa:	88 23       	and	r24, r24
 1ac:	61 f0       	breq	.+24     	; 0x1c6 <LCD_String+0x24>
 1ae:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_Char(str[i]);
 1b0:	0e 94 a5 00 	call	0x14a	; 0x14a <LCD_Char>
 1b4:	8f e3       	ldi	r24, 0x3F	; 63
 1b6:	9f e1       	ldi	r25, 0x1F	; 31
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <LCD_String+0x16>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <LCD_String+0x1c>
 1be:	00 00       	nop
}

void LCD_String(char *str)
{
	int i;
	for(i = 0; str[i] != 0; i++)
 1c0:	89 91       	ld	r24, Y+
 1c2:	81 11       	cpse	r24, r1
 1c4:	f5 cf       	rjmp	.-22     	; 0x1b0 <LCD_String+0xe>
	{
		LCD_Char(str[i]);
		_delay_ms(2);
	}
}
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	08 95       	ret

000001cc <LCD_String_xy>:

void LCD_String_xy(char row, char col, char *str)
{
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	ea 01       	movw	r28, r20
	if ((row == 1) && (col < 16))
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	41 f4       	brne	.+16     	; 0x1e6 <LCD_String_xy+0x1a>
 1d6:	60 31       	cpi	r22, 0x10	; 16
 1d8:	78 f4       	brcc	.+30     	; 0x1f8 <LCD_String_xy+0x2c>
	{
		LCD_Command(0x80 | (col & 0x0F));
 1da:	86 2f       	mov	r24, r22
 1dc:	8f 70       	andi	r24, 0x0F	; 15
 1de:	80 68       	ori	r24, 0x80	; 128
 1e0:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
 1e4:	09 c0       	rjmp	.+18     	; 0x1f8 <LCD_String_xy+0x2c>
	}
	else if ((row == 2) && (col < 16))
 1e6:	82 30       	cpi	r24, 0x02	; 2
 1e8:	39 f4       	brne	.+14     	; 0x1f8 <LCD_String_xy+0x2c>
 1ea:	60 31       	cpi	r22, 0x10	; 16
 1ec:	28 f4       	brcc	.+10     	; 0x1f8 <LCD_String_xy+0x2c>
	{
		LCD_Command(0xC0 | (col & 0x0F));
 1ee:	86 2f       	mov	r24, r22
 1f0:	8f 70       	andi	r24, 0x0F	; 15
 1f2:	80 6c       	ori	r24, 0xC0	; 192
 1f4:	0e 94 5a 00 	call	0xb4	; 0xb4 <LCD_Command>
	}
	LCD_String(str);
 1f8:	ce 01       	movw	r24, r28
 1fa:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <LCD_String>
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <main>:

#include "ADC.h"
#include "LCD.h"

int main(void)
{
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	cd b7       	in	r28, 0x3d	; 61
 20a:	de b7       	in	r29, 0x3e	; 62
 20c:	2a 97       	sbiw	r28, 0x0a	; 10
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	f8 94       	cli
 212:	de bf       	out	0x3e, r29	; 62
 214:	0f be       	out	0x3f, r0	; 63
 216:	cd bf       	out	0x3d, r28	; 61
    char Temperature[10];
	float Cencius;
	
	LCD_Init();
 218:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Init>
	ADC_Init();
 21c:	0e 94 41 00 	call	0x82	; 0x82 <ADC_Init>
    while (1) 
    {
		LCD_String_xy(1, 0, "Temperature:");
		Cencius = ADC_Read(0) * 4.88;
		Cencius = Cencius / 10;
		sprintf(Temperature, "%d%cC", (int) Cencius, DEGREE_SYMBOL); // Convert Integer value to ASCII string
 220:	0f 2e       	mov	r0, r31
 222:	ff ed       	ldi	r31, 0xDF	; 223
 224:	df 2e       	mov	r13, r31
 226:	f0 2d       	mov	r31, r0
 228:	0f 2e       	mov	r0, r31
 22a:	fd e6       	ldi	r31, 0x6D	; 109
 22c:	ef 2e       	mov	r14, r31
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	ff 2e       	mov	r15, r31
 232:	f0 2d       	mov	r31, r0
 234:	8e 01       	movw	r16, r28
 236:	0f 5f       	subi	r16, 0xFF	; 255
 238:	1f 4f       	sbci	r17, 0xFF	; 255
	LCD_Init();
	ADC_Init();
	
    while (1) 
    {
		LCD_String_xy(1, 0, "Temperature:");
 23a:	40 e6       	ldi	r20, 0x60	; 96
 23c:	50 e0       	ldi	r21, 0x00	; 0
 23e:	60 e0       	ldi	r22, 0x00	; 0
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_String_xy>
		Cencius = ADC_Read(0) * 4.88;
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 49 00 	call	0x92	; 0x92 <ADC_Read>
 24c:	bc 01       	movw	r22, r24
 24e:	99 0f       	add	r25, r25
 250:	88 0b       	sbc	r24, r24
 252:	99 0b       	sbc	r25, r25
 254:	0e 94 02 02 	call	0x404	; 0x404 <__floatsisf>
 258:	26 ef       	ldi	r18, 0xF6	; 246
 25a:	38 e2       	ldi	r19, 0x28	; 40
 25c:	4c e9       	ldi	r20, 0x9C	; 156
 25e:	50 e4       	ldi	r21, 0x40	; 64
 260:	0e 94 8e 02 	call	0x51c	; 0x51c <__mulsf3>
		Cencius = Cencius / 10;
		sprintf(Temperature, "%d%cC", (int) Cencius, DEGREE_SYMBOL); // Convert Integer value to ASCII string
 264:	1f 92       	push	r1
 266:	df 92       	push	r13
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	40 e2       	ldi	r20, 0x20	; 32
 26e:	51 e4       	ldi	r21, 0x41	; 65
 270:	0e 94 58 01 	call	0x2b0	; 0x2b0 <__divsf3>
 274:	0e 94 ca 01 	call	0x394	; 0x394 <__fixsfsi>
 278:	7f 93       	push	r23
 27a:	6f 93       	push	r22
 27c:	ff 92       	push	r15
 27e:	ef 92       	push	r14
 280:	1f 93       	push	r17
 282:	0f 93       	push	r16
 284:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <sprintf>
		LCD_String_xy(2, 0, Temperature);
 288:	a8 01       	movw	r20, r16
 28a:	60 e0       	ldi	r22, 0x00	; 0
 28c:	82 e0       	ldi	r24, 0x02	; 2
 28e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_String_xy>
 292:	2f ef       	ldi	r18, 0xFF	; 255
 294:	83 ed       	ldi	r24, 0xD3	; 211
 296:	90 e3       	ldi	r25, 0x30	; 48
 298:	21 50       	subi	r18, 0x01	; 1
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	90 40       	sbci	r25, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <main+0x94>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <main+0x9e>
 2a2:	00 00       	nop
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
 2ae:	c5 cf       	rjmp	.-118    	; 0x23a <main+0x36>

000002b0 <__divsf3>:
 2b0:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <__divsf3x>
 2b4:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_round>
 2b8:	0e 94 4d 02 	call	0x49a	; 0x49a <__fp_pscB>
 2bc:	58 f0       	brcs	.+22     	; 0x2d4 <__divsf3+0x24>
 2be:	0e 94 46 02 	call	0x48c	; 0x48c <__fp_pscA>
 2c2:	40 f0       	brcs	.+16     	; 0x2d4 <__divsf3+0x24>
 2c4:	29 f4       	brne	.+10     	; 0x2d0 <__divsf3+0x20>
 2c6:	5f 3f       	cpi	r21, 0xFF	; 255
 2c8:	29 f0       	breq	.+10     	; 0x2d4 <__divsf3+0x24>
 2ca:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_inf>
 2ce:	51 11       	cpse	r21, r1
 2d0:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_szero>
 2d4:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_nan>

000002d8 <__divsf3x>:
 2d8:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fp_split3>
 2dc:	68 f3       	brcs	.-38     	; 0x2b8 <__divsf3+0x8>

000002de <__divsf3_pse>:
 2de:	99 23       	and	r25, r25
 2e0:	b1 f3       	breq	.-20     	; 0x2ce <__divsf3+0x1e>
 2e2:	55 23       	and	r21, r21
 2e4:	91 f3       	breq	.-28     	; 0x2ca <__divsf3+0x1a>
 2e6:	95 1b       	sub	r25, r21
 2e8:	55 0b       	sbc	r21, r21
 2ea:	bb 27       	eor	r27, r27
 2ec:	aa 27       	eor	r26, r26
 2ee:	62 17       	cp	r22, r18
 2f0:	73 07       	cpc	r23, r19
 2f2:	84 07       	cpc	r24, r20
 2f4:	38 f0       	brcs	.+14     	; 0x304 <__divsf3_pse+0x26>
 2f6:	9f 5f       	subi	r25, 0xFF	; 255
 2f8:	5f 4f       	sbci	r21, 0xFF	; 255
 2fa:	22 0f       	add	r18, r18
 2fc:	33 1f       	adc	r19, r19
 2fe:	44 1f       	adc	r20, r20
 300:	aa 1f       	adc	r26, r26
 302:	a9 f3       	breq	.-22     	; 0x2ee <__divsf3_pse+0x10>
 304:	35 d0       	rcall	.+106    	; 0x370 <__divsf3_pse+0x92>
 306:	0e 2e       	mov	r0, r30
 308:	3a f0       	brmi	.+14     	; 0x318 <__divsf3_pse+0x3a>
 30a:	e0 e8       	ldi	r30, 0x80	; 128
 30c:	32 d0       	rcall	.+100    	; 0x372 <__divsf3_pse+0x94>
 30e:	91 50       	subi	r25, 0x01	; 1
 310:	50 40       	sbci	r21, 0x00	; 0
 312:	e6 95       	lsr	r30
 314:	00 1c       	adc	r0, r0
 316:	ca f7       	brpl	.-14     	; 0x30a <__divsf3_pse+0x2c>
 318:	2b d0       	rcall	.+86     	; 0x370 <__divsf3_pse+0x92>
 31a:	fe 2f       	mov	r31, r30
 31c:	29 d0       	rcall	.+82     	; 0x370 <__divsf3_pse+0x92>
 31e:	66 0f       	add	r22, r22
 320:	77 1f       	adc	r23, r23
 322:	88 1f       	adc	r24, r24
 324:	bb 1f       	adc	r27, r27
 326:	26 17       	cp	r18, r22
 328:	37 07       	cpc	r19, r23
 32a:	48 07       	cpc	r20, r24
 32c:	ab 07       	cpc	r26, r27
 32e:	b0 e8       	ldi	r27, 0x80	; 128
 330:	09 f0       	breq	.+2      	; 0x334 <__divsf3_pse+0x56>
 332:	bb 0b       	sbc	r27, r27
 334:	80 2d       	mov	r24, r0
 336:	bf 01       	movw	r22, r30
 338:	ff 27       	eor	r31, r31
 33a:	93 58       	subi	r25, 0x83	; 131
 33c:	5f 4f       	sbci	r21, 0xFF	; 255
 33e:	3a f0       	brmi	.+14     	; 0x34e <__divsf3_pse+0x70>
 340:	9e 3f       	cpi	r25, 0xFE	; 254
 342:	51 05       	cpc	r21, r1
 344:	78 f0       	brcs	.+30     	; 0x364 <__divsf3_pse+0x86>
 346:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_inf>
 34a:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_szero>
 34e:	5f 3f       	cpi	r21, 0xFF	; 255
 350:	e4 f3       	brlt	.-8      	; 0x34a <__divsf3_pse+0x6c>
 352:	98 3e       	cpi	r25, 0xE8	; 232
 354:	d4 f3       	brlt	.-12     	; 0x34a <__divsf3_pse+0x6c>
 356:	86 95       	lsr	r24
 358:	77 95       	ror	r23
 35a:	67 95       	ror	r22
 35c:	b7 95       	ror	r27
 35e:	f7 95       	ror	r31
 360:	9f 5f       	subi	r25, 0xFF	; 255
 362:	c9 f7       	brne	.-14     	; 0x356 <__divsf3_pse+0x78>
 364:	88 0f       	add	r24, r24
 366:	91 1d       	adc	r25, r1
 368:	96 95       	lsr	r25
 36a:	87 95       	ror	r24
 36c:	97 f9       	bld	r25, 7
 36e:	08 95       	ret
 370:	e1 e0       	ldi	r30, 0x01	; 1
 372:	66 0f       	add	r22, r22
 374:	77 1f       	adc	r23, r23
 376:	88 1f       	adc	r24, r24
 378:	bb 1f       	adc	r27, r27
 37a:	62 17       	cp	r22, r18
 37c:	73 07       	cpc	r23, r19
 37e:	84 07       	cpc	r24, r20
 380:	ba 07       	cpc	r27, r26
 382:	20 f0       	brcs	.+8      	; 0x38c <__divsf3_pse+0xae>
 384:	62 1b       	sub	r22, r18
 386:	73 0b       	sbc	r23, r19
 388:	84 0b       	sbc	r24, r20
 38a:	ba 0b       	sbc	r27, r26
 38c:	ee 1f       	adc	r30, r30
 38e:	88 f7       	brcc	.-30     	; 0x372 <__divsf3_pse+0x94>
 390:	e0 95       	com	r30
 392:	08 95       	ret

00000394 <__fixsfsi>:
 394:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__fixunssfsi>
 398:	68 94       	set
 39a:	b1 11       	cpse	r27, r1
 39c:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_szero>
 3a0:	08 95       	ret

000003a2 <__fixunssfsi>:
 3a2:	0e 94 6d 02 	call	0x4da	; 0x4da <__fp_splitA>
 3a6:	88 f0       	brcs	.+34     	; 0x3ca <__fixunssfsi+0x28>
 3a8:	9f 57       	subi	r25, 0x7F	; 127
 3aa:	98 f0       	brcs	.+38     	; 0x3d2 <__fixunssfsi+0x30>
 3ac:	b9 2f       	mov	r27, r25
 3ae:	99 27       	eor	r25, r25
 3b0:	b7 51       	subi	r27, 0x17	; 23
 3b2:	b0 f0       	brcs	.+44     	; 0x3e0 <__fixunssfsi+0x3e>
 3b4:	e1 f0       	breq	.+56     	; 0x3ee <__fixunssfsi+0x4c>
 3b6:	66 0f       	add	r22, r22
 3b8:	77 1f       	adc	r23, r23
 3ba:	88 1f       	adc	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	1a f0       	brmi	.+6      	; 0x3c6 <__fixunssfsi+0x24>
 3c0:	ba 95       	dec	r27
 3c2:	c9 f7       	brne	.-14     	; 0x3b6 <__fixunssfsi+0x14>
 3c4:	14 c0       	rjmp	.+40     	; 0x3ee <__fixunssfsi+0x4c>
 3c6:	b1 30       	cpi	r27, 0x01	; 1
 3c8:	91 f0       	breq	.+36     	; 0x3ee <__fixunssfsi+0x4c>
 3ca:	0e 94 87 02 	call	0x50e	; 0x50e <__fp_zero>
 3ce:	b1 e0       	ldi	r27, 0x01	; 1
 3d0:	08 95       	ret
 3d2:	0c 94 87 02 	jmp	0x50e	; 0x50e <__fp_zero>
 3d6:	67 2f       	mov	r22, r23
 3d8:	78 2f       	mov	r23, r24
 3da:	88 27       	eor	r24, r24
 3dc:	b8 5f       	subi	r27, 0xF8	; 248
 3de:	39 f0       	breq	.+14     	; 0x3ee <__fixunssfsi+0x4c>
 3e0:	b9 3f       	cpi	r27, 0xF9	; 249
 3e2:	cc f3       	brlt	.-14     	; 0x3d6 <__fixunssfsi+0x34>
 3e4:	86 95       	lsr	r24
 3e6:	77 95       	ror	r23
 3e8:	67 95       	ror	r22
 3ea:	b3 95       	inc	r27
 3ec:	d9 f7       	brne	.-10     	; 0x3e4 <__fixunssfsi+0x42>
 3ee:	3e f4       	brtc	.+14     	; 0x3fe <__fixunssfsi+0x5c>
 3f0:	90 95       	com	r25
 3f2:	80 95       	com	r24
 3f4:	70 95       	com	r23
 3f6:	61 95       	neg	r22
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	8f 4f       	sbci	r24, 0xFF	; 255
 3fc:	9f 4f       	sbci	r25, 0xFF	; 255
 3fe:	08 95       	ret

00000400 <__floatunsisf>:
 400:	e8 94       	clt
 402:	09 c0       	rjmp	.+18     	; 0x416 <__floatsisf+0x12>

00000404 <__floatsisf>:
 404:	97 fb       	bst	r25, 7
 406:	3e f4       	brtc	.+14     	; 0x416 <__floatsisf+0x12>
 408:	90 95       	com	r25
 40a:	80 95       	com	r24
 40c:	70 95       	com	r23
 40e:	61 95       	neg	r22
 410:	7f 4f       	sbci	r23, 0xFF	; 255
 412:	8f 4f       	sbci	r24, 0xFF	; 255
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	99 23       	and	r25, r25
 418:	a9 f0       	breq	.+42     	; 0x444 <__floatsisf+0x40>
 41a:	f9 2f       	mov	r31, r25
 41c:	96 e9       	ldi	r25, 0x96	; 150
 41e:	bb 27       	eor	r27, r27
 420:	93 95       	inc	r25
 422:	f6 95       	lsr	r31
 424:	87 95       	ror	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b7 95       	ror	r27
 42c:	f1 11       	cpse	r31, r1
 42e:	f8 cf       	rjmp	.-16     	; 0x420 <__floatsisf+0x1c>
 430:	fa f4       	brpl	.+62     	; 0x470 <__floatsisf+0x6c>
 432:	bb 0f       	add	r27, r27
 434:	11 f4       	brne	.+4      	; 0x43a <__floatsisf+0x36>
 436:	60 ff       	sbrs	r22, 0
 438:	1b c0       	rjmp	.+54     	; 0x470 <__floatsisf+0x6c>
 43a:	6f 5f       	subi	r22, 0xFF	; 255
 43c:	7f 4f       	sbci	r23, 0xFF	; 255
 43e:	8f 4f       	sbci	r24, 0xFF	; 255
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	16 c0       	rjmp	.+44     	; 0x470 <__floatsisf+0x6c>
 444:	88 23       	and	r24, r24
 446:	11 f0       	breq	.+4      	; 0x44c <__floatsisf+0x48>
 448:	96 e9       	ldi	r25, 0x96	; 150
 44a:	11 c0       	rjmp	.+34     	; 0x46e <__floatsisf+0x6a>
 44c:	77 23       	and	r23, r23
 44e:	21 f0       	breq	.+8      	; 0x458 <__floatsisf+0x54>
 450:	9e e8       	ldi	r25, 0x8E	; 142
 452:	87 2f       	mov	r24, r23
 454:	76 2f       	mov	r23, r22
 456:	05 c0       	rjmp	.+10     	; 0x462 <__floatsisf+0x5e>
 458:	66 23       	and	r22, r22
 45a:	71 f0       	breq	.+28     	; 0x478 <__floatsisf+0x74>
 45c:	96 e8       	ldi	r25, 0x86	; 134
 45e:	86 2f       	mov	r24, r22
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	60 e0       	ldi	r22, 0x00	; 0
 464:	2a f0       	brmi	.+10     	; 0x470 <__floatsisf+0x6c>
 466:	9a 95       	dec	r25
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	da f7       	brpl	.-10     	; 0x466 <__floatsisf+0x62>
 470:	88 0f       	add	r24, r24
 472:	96 95       	lsr	r25
 474:	87 95       	ror	r24
 476:	97 f9       	bld	r25, 7
 478:	08 95       	ret

0000047a <__fp_inf>:
 47a:	97 f9       	bld	r25, 7
 47c:	9f 67       	ori	r25, 0x7F	; 127
 47e:	80 e8       	ldi	r24, 0x80	; 128
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	08 95       	ret

00000486 <__fp_nan>:
 486:	9f ef       	ldi	r25, 0xFF	; 255
 488:	80 ec       	ldi	r24, 0xC0	; 192
 48a:	08 95       	ret

0000048c <__fp_pscA>:
 48c:	00 24       	eor	r0, r0
 48e:	0a 94       	dec	r0
 490:	16 16       	cp	r1, r22
 492:	17 06       	cpc	r1, r23
 494:	18 06       	cpc	r1, r24
 496:	09 06       	cpc	r0, r25
 498:	08 95       	ret

0000049a <__fp_pscB>:
 49a:	00 24       	eor	r0, r0
 49c:	0a 94       	dec	r0
 49e:	12 16       	cp	r1, r18
 4a0:	13 06       	cpc	r1, r19
 4a2:	14 06       	cpc	r1, r20
 4a4:	05 06       	cpc	r0, r21
 4a6:	08 95       	ret

000004a8 <__fp_round>:
 4a8:	09 2e       	mov	r0, r25
 4aa:	03 94       	inc	r0
 4ac:	00 0c       	add	r0, r0
 4ae:	11 f4       	brne	.+4      	; 0x4b4 <__fp_round+0xc>
 4b0:	88 23       	and	r24, r24
 4b2:	52 f0       	brmi	.+20     	; 0x4c8 <__fp_round+0x20>
 4b4:	bb 0f       	add	r27, r27
 4b6:	40 f4       	brcc	.+16     	; 0x4c8 <__fp_round+0x20>
 4b8:	bf 2b       	or	r27, r31
 4ba:	11 f4       	brne	.+4      	; 0x4c0 <__fp_round+0x18>
 4bc:	60 ff       	sbrs	r22, 0
 4be:	04 c0       	rjmp	.+8      	; 0x4c8 <__fp_round+0x20>
 4c0:	6f 5f       	subi	r22, 0xFF	; 255
 4c2:	7f 4f       	sbci	r23, 0xFF	; 255
 4c4:	8f 4f       	sbci	r24, 0xFF	; 255
 4c6:	9f 4f       	sbci	r25, 0xFF	; 255
 4c8:	08 95       	ret

000004ca <__fp_split3>:
 4ca:	57 fd       	sbrc	r21, 7
 4cc:	90 58       	subi	r25, 0x80	; 128
 4ce:	44 0f       	add	r20, r20
 4d0:	55 1f       	adc	r21, r21
 4d2:	59 f0       	breq	.+22     	; 0x4ea <__fp_splitA+0x10>
 4d4:	5f 3f       	cpi	r21, 0xFF	; 255
 4d6:	71 f0       	breq	.+28     	; 0x4f4 <__fp_splitA+0x1a>
 4d8:	47 95       	ror	r20

000004da <__fp_splitA>:
 4da:	88 0f       	add	r24, r24
 4dc:	97 fb       	bst	r25, 7
 4de:	99 1f       	adc	r25, r25
 4e0:	61 f0       	breq	.+24     	; 0x4fa <__fp_splitA+0x20>
 4e2:	9f 3f       	cpi	r25, 0xFF	; 255
 4e4:	79 f0       	breq	.+30     	; 0x504 <__fp_splitA+0x2a>
 4e6:	87 95       	ror	r24
 4e8:	08 95       	ret
 4ea:	12 16       	cp	r1, r18
 4ec:	13 06       	cpc	r1, r19
 4ee:	14 06       	cpc	r1, r20
 4f0:	55 1f       	adc	r21, r21
 4f2:	f2 cf       	rjmp	.-28     	; 0x4d8 <__fp_split3+0xe>
 4f4:	46 95       	lsr	r20
 4f6:	f1 df       	rcall	.-30     	; 0x4da <__fp_splitA>
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__fp_splitA+0x30>
 4fa:	16 16       	cp	r1, r22
 4fc:	17 06       	cpc	r1, r23
 4fe:	18 06       	cpc	r1, r24
 500:	99 1f       	adc	r25, r25
 502:	f1 cf       	rjmp	.-30     	; 0x4e6 <__fp_splitA+0xc>
 504:	86 95       	lsr	r24
 506:	71 05       	cpc	r23, r1
 508:	61 05       	cpc	r22, r1
 50a:	08 94       	sec
 50c:	08 95       	ret

0000050e <__fp_zero>:
 50e:	e8 94       	clt

00000510 <__fp_szero>:
 510:	bb 27       	eor	r27, r27
 512:	66 27       	eor	r22, r22
 514:	77 27       	eor	r23, r23
 516:	cb 01       	movw	r24, r22
 518:	97 f9       	bld	r25, 7
 51a:	08 95       	ret

0000051c <__mulsf3>:
 51c:	0e 94 a1 02 	call	0x542	; 0x542 <__mulsf3x>
 520:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_round>
 524:	0e 94 46 02 	call	0x48c	; 0x48c <__fp_pscA>
 528:	38 f0       	brcs	.+14     	; 0x538 <__mulsf3+0x1c>
 52a:	0e 94 4d 02 	call	0x49a	; 0x49a <__fp_pscB>
 52e:	20 f0       	brcs	.+8      	; 0x538 <__mulsf3+0x1c>
 530:	95 23       	and	r25, r21
 532:	11 f0       	breq	.+4      	; 0x538 <__mulsf3+0x1c>
 534:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_inf>
 538:	0c 94 43 02 	jmp	0x486	; 0x486 <__fp_nan>
 53c:	11 24       	eor	r1, r1
 53e:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_szero>

00000542 <__mulsf3x>:
 542:	0e 94 65 02 	call	0x4ca	; 0x4ca <__fp_split3>
 546:	70 f3       	brcs	.-36     	; 0x524 <__mulsf3+0x8>

00000548 <__mulsf3_pse>:
 548:	95 9f       	mul	r25, r21
 54a:	c1 f3       	breq	.-16     	; 0x53c <__mulsf3+0x20>
 54c:	95 0f       	add	r25, r21
 54e:	50 e0       	ldi	r21, 0x00	; 0
 550:	55 1f       	adc	r21, r21
 552:	62 9f       	mul	r22, r18
 554:	f0 01       	movw	r30, r0
 556:	72 9f       	mul	r23, r18
 558:	bb 27       	eor	r27, r27
 55a:	f0 0d       	add	r31, r0
 55c:	b1 1d       	adc	r27, r1
 55e:	63 9f       	mul	r22, r19
 560:	aa 27       	eor	r26, r26
 562:	f0 0d       	add	r31, r0
 564:	b1 1d       	adc	r27, r1
 566:	aa 1f       	adc	r26, r26
 568:	64 9f       	mul	r22, r20
 56a:	66 27       	eor	r22, r22
 56c:	b0 0d       	add	r27, r0
 56e:	a1 1d       	adc	r26, r1
 570:	66 1f       	adc	r22, r22
 572:	82 9f       	mul	r24, r18
 574:	22 27       	eor	r18, r18
 576:	b0 0d       	add	r27, r0
 578:	a1 1d       	adc	r26, r1
 57a:	62 1f       	adc	r22, r18
 57c:	73 9f       	mul	r23, r19
 57e:	b0 0d       	add	r27, r0
 580:	a1 1d       	adc	r26, r1
 582:	62 1f       	adc	r22, r18
 584:	83 9f       	mul	r24, r19
 586:	a0 0d       	add	r26, r0
 588:	61 1d       	adc	r22, r1
 58a:	22 1f       	adc	r18, r18
 58c:	74 9f       	mul	r23, r20
 58e:	33 27       	eor	r19, r19
 590:	a0 0d       	add	r26, r0
 592:	61 1d       	adc	r22, r1
 594:	23 1f       	adc	r18, r19
 596:	84 9f       	mul	r24, r20
 598:	60 0d       	add	r22, r0
 59a:	21 1d       	adc	r18, r1
 59c:	82 2f       	mov	r24, r18
 59e:	76 2f       	mov	r23, r22
 5a0:	6a 2f       	mov	r22, r26
 5a2:	11 24       	eor	r1, r1
 5a4:	9f 57       	subi	r25, 0x7F	; 127
 5a6:	50 40       	sbci	r21, 0x00	; 0
 5a8:	9a f0       	brmi	.+38     	; 0x5d0 <__mulsf3_pse+0x88>
 5aa:	f1 f0       	breq	.+60     	; 0x5e8 <__mulsf3_pse+0xa0>
 5ac:	88 23       	and	r24, r24
 5ae:	4a f0       	brmi	.+18     	; 0x5c2 <__mulsf3_pse+0x7a>
 5b0:	ee 0f       	add	r30, r30
 5b2:	ff 1f       	adc	r31, r31
 5b4:	bb 1f       	adc	r27, r27
 5b6:	66 1f       	adc	r22, r22
 5b8:	77 1f       	adc	r23, r23
 5ba:	88 1f       	adc	r24, r24
 5bc:	91 50       	subi	r25, 0x01	; 1
 5be:	50 40       	sbci	r21, 0x00	; 0
 5c0:	a9 f7       	brne	.-22     	; 0x5ac <__mulsf3_pse+0x64>
 5c2:	9e 3f       	cpi	r25, 0xFE	; 254
 5c4:	51 05       	cpc	r21, r1
 5c6:	80 f0       	brcs	.+32     	; 0x5e8 <__mulsf3_pse+0xa0>
 5c8:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__fp_inf>
 5cc:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_szero>
 5d0:	5f 3f       	cpi	r21, 0xFF	; 255
 5d2:	e4 f3       	brlt	.-8      	; 0x5cc <__mulsf3_pse+0x84>
 5d4:	98 3e       	cpi	r25, 0xE8	; 232
 5d6:	d4 f3       	brlt	.-12     	; 0x5cc <__mulsf3_pse+0x84>
 5d8:	86 95       	lsr	r24
 5da:	77 95       	ror	r23
 5dc:	67 95       	ror	r22
 5de:	b7 95       	ror	r27
 5e0:	f7 95       	ror	r31
 5e2:	e7 95       	ror	r30
 5e4:	9f 5f       	subi	r25, 0xFF	; 255
 5e6:	c1 f7       	brne	.-16     	; 0x5d8 <__mulsf3_pse+0x90>
 5e8:	fe 2b       	or	r31, r30
 5ea:	88 0f       	add	r24, r24
 5ec:	91 1d       	adc	r25, r1
 5ee:	96 95       	lsr	r25
 5f0:	87 95       	ror	r24
 5f2:	97 f9       	bld	r25, 7
 5f4:	08 95       	ret

000005f6 <sprintf>:
 5f6:	ae e0       	ldi	r26, 0x0E	; 14
 5f8:	b0 e0       	ldi	r27, 0x00	; 0
 5fa:	e1 e0       	ldi	r30, 0x01	; 1
 5fc:	f3 e0       	ldi	r31, 0x03	; 3
 5fe:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__prologue_saves__+0x1c>
 602:	0d 89       	ldd	r16, Y+21	; 0x15
 604:	1e 89       	ldd	r17, Y+22	; 0x16
 606:	86 e0       	ldi	r24, 0x06	; 6
 608:	8c 83       	std	Y+4, r24	; 0x04
 60a:	1a 83       	std	Y+2, r17	; 0x02
 60c:	09 83       	std	Y+1, r16	; 0x01
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	9f e7       	ldi	r25, 0x7F	; 127
 612:	9e 83       	std	Y+6, r25	; 0x06
 614:	8d 83       	std	Y+5, r24	; 0x05
 616:	ae 01       	movw	r20, r28
 618:	47 5e       	subi	r20, 0xE7	; 231
 61a:	5f 4f       	sbci	r21, 0xFF	; 255
 61c:	6f 89       	ldd	r22, Y+23	; 0x17
 61e:	78 8d       	ldd	r23, Y+24	; 0x18
 620:	ce 01       	movw	r24, r28
 622:	01 96       	adiw	r24, 0x01	; 1
 624:	0e 94 1d 03 	call	0x63a	; 0x63a <vfprintf>
 628:	ef 81       	ldd	r30, Y+7	; 0x07
 62a:	f8 85       	ldd	r31, Y+8	; 0x08
 62c:	e0 0f       	add	r30, r16
 62e:	f1 1f       	adc	r31, r17
 630:	10 82       	st	Z, r1
 632:	2e 96       	adiw	r28, 0x0e	; 14
 634:	e4 e0       	ldi	r30, 0x04	; 4
 636:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__epilogue_restores__+0x1c>

0000063a <vfprintf>:
 63a:	ab e0       	ldi	r26, 0x0B	; 11
 63c:	b0 e0       	ldi	r27, 0x00	; 0
 63e:	e3 e2       	ldi	r30, 0x23	; 35
 640:	f3 e0       	ldi	r31, 0x03	; 3
 642:	0c 94 ae 05 	jmp	0xb5c	; 0xb5c <__prologue_saves__>
 646:	6c 01       	movw	r12, r24
 648:	7b 01       	movw	r14, r22
 64a:	8a 01       	movw	r16, r20
 64c:	fc 01       	movw	r30, r24
 64e:	17 82       	std	Z+7, r1	; 0x07
 650:	16 82       	std	Z+6, r1	; 0x06
 652:	83 81       	ldd	r24, Z+3	; 0x03
 654:	81 ff       	sbrs	r24, 1
 656:	cc c1       	rjmp	.+920    	; 0x9f0 <__stack+0x191>
 658:	ce 01       	movw	r24, r28
 65a:	01 96       	adiw	r24, 0x01	; 1
 65c:	3c 01       	movw	r6, r24
 65e:	f6 01       	movw	r30, r12
 660:	93 81       	ldd	r25, Z+3	; 0x03
 662:	f7 01       	movw	r30, r14
 664:	93 fd       	sbrc	r25, 3
 666:	85 91       	lpm	r24, Z+
 668:	93 ff       	sbrs	r25, 3
 66a:	81 91       	ld	r24, Z+
 66c:	7f 01       	movw	r14, r30
 66e:	88 23       	and	r24, r24
 670:	09 f4       	brne	.+2      	; 0x674 <vfprintf+0x3a>
 672:	ba c1       	rjmp	.+884    	; 0x9e8 <__stack+0x189>
 674:	85 32       	cpi	r24, 0x25	; 37
 676:	39 f4       	brne	.+14     	; 0x686 <vfprintf+0x4c>
 678:	93 fd       	sbrc	r25, 3
 67a:	85 91       	lpm	r24, Z+
 67c:	93 ff       	sbrs	r25, 3
 67e:	81 91       	ld	r24, Z+
 680:	7f 01       	movw	r14, r30
 682:	85 32       	cpi	r24, 0x25	; 37
 684:	29 f4       	brne	.+10     	; 0x690 <vfprintf+0x56>
 686:	b6 01       	movw	r22, r12
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 68e:	e7 cf       	rjmp	.-50     	; 0x65e <vfprintf+0x24>
 690:	91 2c       	mov	r9, r1
 692:	21 2c       	mov	r2, r1
 694:	31 2c       	mov	r3, r1
 696:	ff e1       	ldi	r31, 0x1F	; 31
 698:	f3 15       	cp	r31, r3
 69a:	d8 f0       	brcs	.+54     	; 0x6d2 <vfprintf+0x98>
 69c:	8b 32       	cpi	r24, 0x2B	; 43
 69e:	79 f0       	breq	.+30     	; 0x6be <vfprintf+0x84>
 6a0:	38 f4       	brcc	.+14     	; 0x6b0 <vfprintf+0x76>
 6a2:	80 32       	cpi	r24, 0x20	; 32
 6a4:	79 f0       	breq	.+30     	; 0x6c4 <vfprintf+0x8a>
 6a6:	83 32       	cpi	r24, 0x23	; 35
 6a8:	a1 f4       	brne	.+40     	; 0x6d2 <vfprintf+0x98>
 6aa:	23 2d       	mov	r18, r3
 6ac:	20 61       	ori	r18, 0x10	; 16
 6ae:	1d c0       	rjmp	.+58     	; 0x6ea <vfprintf+0xb0>
 6b0:	8d 32       	cpi	r24, 0x2D	; 45
 6b2:	61 f0       	breq	.+24     	; 0x6cc <vfprintf+0x92>
 6b4:	80 33       	cpi	r24, 0x30	; 48
 6b6:	69 f4       	brne	.+26     	; 0x6d2 <vfprintf+0x98>
 6b8:	23 2d       	mov	r18, r3
 6ba:	21 60       	ori	r18, 0x01	; 1
 6bc:	16 c0       	rjmp	.+44     	; 0x6ea <vfprintf+0xb0>
 6be:	83 2d       	mov	r24, r3
 6c0:	82 60       	ori	r24, 0x02	; 2
 6c2:	38 2e       	mov	r3, r24
 6c4:	e3 2d       	mov	r30, r3
 6c6:	e4 60       	ori	r30, 0x04	; 4
 6c8:	3e 2e       	mov	r3, r30
 6ca:	2a c0       	rjmp	.+84     	; 0x720 <vfprintf+0xe6>
 6cc:	f3 2d       	mov	r31, r3
 6ce:	f8 60       	ori	r31, 0x08	; 8
 6d0:	1d c0       	rjmp	.+58     	; 0x70c <vfprintf+0xd2>
 6d2:	37 fc       	sbrc	r3, 7
 6d4:	2d c0       	rjmp	.+90     	; 0x730 <vfprintf+0xf6>
 6d6:	20 ed       	ldi	r18, 0xD0	; 208
 6d8:	28 0f       	add	r18, r24
 6da:	2a 30       	cpi	r18, 0x0A	; 10
 6dc:	40 f0       	brcs	.+16     	; 0x6ee <vfprintf+0xb4>
 6de:	8e 32       	cpi	r24, 0x2E	; 46
 6e0:	b9 f4       	brne	.+46     	; 0x710 <vfprintf+0xd6>
 6e2:	36 fc       	sbrc	r3, 6
 6e4:	81 c1       	rjmp	.+770    	; 0x9e8 <__stack+0x189>
 6e6:	23 2d       	mov	r18, r3
 6e8:	20 64       	ori	r18, 0x40	; 64
 6ea:	32 2e       	mov	r3, r18
 6ec:	19 c0       	rjmp	.+50     	; 0x720 <vfprintf+0xe6>
 6ee:	36 fe       	sbrs	r3, 6
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <vfprintf+0xc4>
 6f2:	8a e0       	ldi	r24, 0x0A	; 10
 6f4:	98 9e       	mul	r9, r24
 6f6:	20 0d       	add	r18, r0
 6f8:	11 24       	eor	r1, r1
 6fa:	92 2e       	mov	r9, r18
 6fc:	11 c0       	rjmp	.+34     	; 0x720 <vfprintf+0xe6>
 6fe:	ea e0       	ldi	r30, 0x0A	; 10
 700:	2e 9e       	mul	r2, r30
 702:	20 0d       	add	r18, r0
 704:	11 24       	eor	r1, r1
 706:	22 2e       	mov	r2, r18
 708:	f3 2d       	mov	r31, r3
 70a:	f0 62       	ori	r31, 0x20	; 32
 70c:	3f 2e       	mov	r3, r31
 70e:	08 c0       	rjmp	.+16     	; 0x720 <vfprintf+0xe6>
 710:	8c 36       	cpi	r24, 0x6C	; 108
 712:	21 f4       	brne	.+8      	; 0x71c <vfprintf+0xe2>
 714:	83 2d       	mov	r24, r3
 716:	80 68       	ori	r24, 0x80	; 128
 718:	38 2e       	mov	r3, r24
 71a:	02 c0       	rjmp	.+4      	; 0x720 <vfprintf+0xe6>
 71c:	88 36       	cpi	r24, 0x68	; 104
 71e:	41 f4       	brne	.+16     	; 0x730 <vfprintf+0xf6>
 720:	f7 01       	movw	r30, r14
 722:	93 fd       	sbrc	r25, 3
 724:	85 91       	lpm	r24, Z+
 726:	93 ff       	sbrs	r25, 3
 728:	81 91       	ld	r24, Z+
 72a:	7f 01       	movw	r14, r30
 72c:	81 11       	cpse	r24, r1
 72e:	b3 cf       	rjmp	.-154    	; 0x696 <vfprintf+0x5c>
 730:	98 2f       	mov	r25, r24
 732:	9f 7d       	andi	r25, 0xDF	; 223
 734:	95 54       	subi	r25, 0x45	; 69
 736:	93 30       	cpi	r25, 0x03	; 3
 738:	28 f4       	brcc	.+10     	; 0x744 <vfprintf+0x10a>
 73a:	0c 5f       	subi	r16, 0xFC	; 252
 73c:	1f 4f       	sbci	r17, 0xFF	; 255
 73e:	9f e3       	ldi	r25, 0x3F	; 63
 740:	99 83       	std	Y+1, r25	; 0x01
 742:	0d c0       	rjmp	.+26     	; 0x75e <vfprintf+0x124>
 744:	83 36       	cpi	r24, 0x63	; 99
 746:	31 f0       	breq	.+12     	; 0x754 <vfprintf+0x11a>
 748:	83 37       	cpi	r24, 0x73	; 115
 74a:	71 f0       	breq	.+28     	; 0x768 <vfprintf+0x12e>
 74c:	83 35       	cpi	r24, 0x53	; 83
 74e:	09 f0       	breq	.+2      	; 0x752 <vfprintf+0x118>
 750:	59 c0       	rjmp	.+178    	; 0x804 <vfprintf+0x1ca>
 752:	21 c0       	rjmp	.+66     	; 0x796 <vfprintf+0x15c>
 754:	f8 01       	movw	r30, r16
 756:	80 81       	ld	r24, Z
 758:	89 83       	std	Y+1, r24	; 0x01
 75a:	0e 5f       	subi	r16, 0xFE	; 254
 75c:	1f 4f       	sbci	r17, 0xFF	; 255
 75e:	88 24       	eor	r8, r8
 760:	83 94       	inc	r8
 762:	91 2c       	mov	r9, r1
 764:	53 01       	movw	r10, r6
 766:	13 c0       	rjmp	.+38     	; 0x78e <vfprintf+0x154>
 768:	28 01       	movw	r4, r16
 76a:	f2 e0       	ldi	r31, 0x02	; 2
 76c:	4f 0e       	add	r4, r31
 76e:	51 1c       	adc	r5, r1
 770:	f8 01       	movw	r30, r16
 772:	a0 80       	ld	r10, Z
 774:	b1 80       	ldd	r11, Z+1	; 0x01
 776:	36 fe       	sbrs	r3, 6
 778:	03 c0       	rjmp	.+6      	; 0x780 <vfprintf+0x146>
 77a:	69 2d       	mov	r22, r9
 77c:	70 e0       	ldi	r23, 0x00	; 0
 77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x14a>
 780:	6f ef       	ldi	r22, 0xFF	; 255
 782:	7f ef       	ldi	r23, 0xFF	; 255
 784:	c5 01       	movw	r24, r10
 786:	0e 94 09 05 	call	0xa12	; 0xa12 <strnlen>
 78a:	4c 01       	movw	r8, r24
 78c:	82 01       	movw	r16, r4
 78e:	f3 2d       	mov	r31, r3
 790:	ff 77       	andi	r31, 0x7F	; 127
 792:	3f 2e       	mov	r3, r31
 794:	16 c0       	rjmp	.+44     	; 0x7c2 <vfprintf+0x188>
 796:	28 01       	movw	r4, r16
 798:	22 e0       	ldi	r18, 0x02	; 2
 79a:	42 0e       	add	r4, r18
 79c:	51 1c       	adc	r5, r1
 79e:	f8 01       	movw	r30, r16
 7a0:	a0 80       	ld	r10, Z
 7a2:	b1 80       	ldd	r11, Z+1	; 0x01
 7a4:	36 fe       	sbrs	r3, 6
 7a6:	03 c0       	rjmp	.+6      	; 0x7ae <vfprintf+0x174>
 7a8:	69 2d       	mov	r22, r9
 7aa:	70 e0       	ldi	r23, 0x00	; 0
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x178>
 7ae:	6f ef       	ldi	r22, 0xFF	; 255
 7b0:	7f ef       	ldi	r23, 0xFF	; 255
 7b2:	c5 01       	movw	r24, r10
 7b4:	0e 94 fe 04 	call	0x9fc	; 0x9fc <strnlen_P>
 7b8:	4c 01       	movw	r8, r24
 7ba:	f3 2d       	mov	r31, r3
 7bc:	f0 68       	ori	r31, 0x80	; 128
 7be:	3f 2e       	mov	r3, r31
 7c0:	82 01       	movw	r16, r4
 7c2:	33 fc       	sbrc	r3, 3
 7c4:	1b c0       	rjmp	.+54     	; 0x7fc <vfprintf+0x1c2>
 7c6:	82 2d       	mov	r24, r2
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	88 16       	cp	r8, r24
 7cc:	99 06       	cpc	r9, r25
 7ce:	b0 f4       	brcc	.+44     	; 0x7fc <vfprintf+0x1c2>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e2       	ldi	r24, 0x20	; 32
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 7da:	2a 94       	dec	r2
 7dc:	f4 cf       	rjmp	.-24     	; 0x7c6 <vfprintf+0x18c>
 7de:	f5 01       	movw	r30, r10
 7e0:	37 fc       	sbrc	r3, 7
 7e2:	85 91       	lpm	r24, Z+
 7e4:	37 fe       	sbrs	r3, 7
 7e6:	81 91       	ld	r24, Z+
 7e8:	5f 01       	movw	r10, r30
 7ea:	b6 01       	movw	r22, r12
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 7f2:	21 10       	cpse	r2, r1
 7f4:	2a 94       	dec	r2
 7f6:	21 e0       	ldi	r18, 0x01	; 1
 7f8:	82 1a       	sub	r8, r18
 7fa:	91 08       	sbc	r9, r1
 7fc:	81 14       	cp	r8, r1
 7fe:	91 04       	cpc	r9, r1
 800:	71 f7       	brne	.-36     	; 0x7de <vfprintf+0x1a4>
 802:	e8 c0       	rjmp	.+464    	; 0x9d4 <__stack+0x175>
 804:	84 36       	cpi	r24, 0x64	; 100
 806:	11 f0       	breq	.+4      	; 0x80c <vfprintf+0x1d2>
 808:	89 36       	cpi	r24, 0x69	; 105
 80a:	41 f5       	brne	.+80     	; 0x85c <vfprintf+0x222>
 80c:	f8 01       	movw	r30, r16
 80e:	37 fe       	sbrs	r3, 7
 810:	07 c0       	rjmp	.+14     	; 0x820 <vfprintf+0x1e6>
 812:	60 81       	ld	r22, Z
 814:	71 81       	ldd	r23, Z+1	; 0x01
 816:	82 81       	ldd	r24, Z+2	; 0x02
 818:	93 81       	ldd	r25, Z+3	; 0x03
 81a:	0c 5f       	subi	r16, 0xFC	; 252
 81c:	1f 4f       	sbci	r17, 0xFF	; 255
 81e:	08 c0       	rjmp	.+16     	; 0x830 <vfprintf+0x1f6>
 820:	60 81       	ld	r22, Z
 822:	71 81       	ldd	r23, Z+1	; 0x01
 824:	07 2e       	mov	r0, r23
 826:	00 0c       	add	r0, r0
 828:	88 0b       	sbc	r24, r24
 82a:	99 0b       	sbc	r25, r25
 82c:	0e 5f       	subi	r16, 0xFE	; 254
 82e:	1f 4f       	sbci	r17, 0xFF	; 255
 830:	f3 2d       	mov	r31, r3
 832:	ff 76       	andi	r31, 0x6F	; 111
 834:	3f 2e       	mov	r3, r31
 836:	97 ff       	sbrs	r25, 7
 838:	09 c0       	rjmp	.+18     	; 0x84c <vfprintf+0x212>
 83a:	90 95       	com	r25
 83c:	80 95       	com	r24
 83e:	70 95       	com	r23
 840:	61 95       	neg	r22
 842:	7f 4f       	sbci	r23, 0xFF	; 255
 844:	8f 4f       	sbci	r24, 0xFF	; 255
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	f0 68       	ori	r31, 0x80	; 128
 84a:	3f 2e       	mov	r3, r31
 84c:	2a e0       	ldi	r18, 0x0A	; 10
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	a3 01       	movw	r20, r6
 852:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__ultoa_invert>
 856:	88 2e       	mov	r8, r24
 858:	86 18       	sub	r8, r6
 85a:	45 c0       	rjmp	.+138    	; 0x8e6 <__stack+0x87>
 85c:	85 37       	cpi	r24, 0x75	; 117
 85e:	31 f4       	brne	.+12     	; 0x86c <__stack+0xd>
 860:	23 2d       	mov	r18, r3
 862:	2f 7e       	andi	r18, 0xEF	; 239
 864:	b2 2e       	mov	r11, r18
 866:	2a e0       	ldi	r18, 0x0A	; 10
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	25 c0       	rjmp	.+74     	; 0x8b6 <__stack+0x57>
 86c:	93 2d       	mov	r25, r3
 86e:	99 7f       	andi	r25, 0xF9	; 249
 870:	b9 2e       	mov	r11, r25
 872:	8f 36       	cpi	r24, 0x6F	; 111
 874:	c1 f0       	breq	.+48     	; 0x8a6 <__stack+0x47>
 876:	18 f4       	brcc	.+6      	; 0x87e <__stack+0x1f>
 878:	88 35       	cpi	r24, 0x58	; 88
 87a:	79 f0       	breq	.+30     	; 0x89a <__stack+0x3b>
 87c:	b5 c0       	rjmp	.+362    	; 0x9e8 <__stack+0x189>
 87e:	80 37       	cpi	r24, 0x70	; 112
 880:	19 f0       	breq	.+6      	; 0x888 <__stack+0x29>
 882:	88 37       	cpi	r24, 0x78	; 120
 884:	21 f0       	breq	.+8      	; 0x88e <__stack+0x2f>
 886:	b0 c0       	rjmp	.+352    	; 0x9e8 <__stack+0x189>
 888:	e9 2f       	mov	r30, r25
 88a:	e0 61       	ori	r30, 0x10	; 16
 88c:	be 2e       	mov	r11, r30
 88e:	b4 fe       	sbrs	r11, 4
 890:	0d c0       	rjmp	.+26     	; 0x8ac <__stack+0x4d>
 892:	fb 2d       	mov	r31, r11
 894:	f4 60       	ori	r31, 0x04	; 4
 896:	bf 2e       	mov	r11, r31
 898:	09 c0       	rjmp	.+18     	; 0x8ac <__stack+0x4d>
 89a:	34 fe       	sbrs	r3, 4
 89c:	0a c0       	rjmp	.+20     	; 0x8b2 <__stack+0x53>
 89e:	29 2f       	mov	r18, r25
 8a0:	26 60       	ori	r18, 0x06	; 6
 8a2:	b2 2e       	mov	r11, r18
 8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <__stack+0x53>
 8a6:	28 e0       	ldi	r18, 0x08	; 8
 8a8:	30 e0       	ldi	r19, 0x00	; 0
 8aa:	05 c0       	rjmp	.+10     	; 0x8b6 <__stack+0x57>
 8ac:	20 e1       	ldi	r18, 0x10	; 16
 8ae:	30 e0       	ldi	r19, 0x00	; 0
 8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <__stack+0x57>
 8b2:	20 e1       	ldi	r18, 0x10	; 16
 8b4:	32 e0       	ldi	r19, 0x02	; 2
 8b6:	f8 01       	movw	r30, r16
 8b8:	b7 fe       	sbrs	r11, 7
 8ba:	07 c0       	rjmp	.+14     	; 0x8ca <__stack+0x6b>
 8bc:	60 81       	ld	r22, Z
 8be:	71 81       	ldd	r23, Z+1	; 0x01
 8c0:	82 81       	ldd	r24, Z+2	; 0x02
 8c2:	93 81       	ldd	r25, Z+3	; 0x03
 8c4:	0c 5f       	subi	r16, 0xFC	; 252
 8c6:	1f 4f       	sbci	r17, 0xFF	; 255
 8c8:	06 c0       	rjmp	.+12     	; 0x8d6 <__stack+0x77>
 8ca:	60 81       	ld	r22, Z
 8cc:	71 81       	ldd	r23, Z+1	; 0x01
 8ce:	80 e0       	ldi	r24, 0x00	; 0
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 5f       	subi	r16, 0xFE	; 254
 8d4:	1f 4f       	sbci	r17, 0xFF	; 255
 8d6:	a3 01       	movw	r20, r6
 8d8:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__ultoa_invert>
 8dc:	88 2e       	mov	r8, r24
 8de:	86 18       	sub	r8, r6
 8e0:	fb 2d       	mov	r31, r11
 8e2:	ff 77       	andi	r31, 0x7F	; 127
 8e4:	3f 2e       	mov	r3, r31
 8e6:	36 fe       	sbrs	r3, 6
 8e8:	0d c0       	rjmp	.+26     	; 0x904 <__stack+0xa5>
 8ea:	23 2d       	mov	r18, r3
 8ec:	2e 7f       	andi	r18, 0xFE	; 254
 8ee:	a2 2e       	mov	r10, r18
 8f0:	89 14       	cp	r8, r9
 8f2:	58 f4       	brcc	.+22     	; 0x90a <__stack+0xab>
 8f4:	34 fe       	sbrs	r3, 4
 8f6:	0b c0       	rjmp	.+22     	; 0x90e <__stack+0xaf>
 8f8:	32 fc       	sbrc	r3, 2
 8fa:	09 c0       	rjmp	.+18     	; 0x90e <__stack+0xaf>
 8fc:	83 2d       	mov	r24, r3
 8fe:	8e 7e       	andi	r24, 0xEE	; 238
 900:	a8 2e       	mov	r10, r24
 902:	05 c0       	rjmp	.+10     	; 0x90e <__stack+0xaf>
 904:	b8 2c       	mov	r11, r8
 906:	a3 2c       	mov	r10, r3
 908:	03 c0       	rjmp	.+6      	; 0x910 <__stack+0xb1>
 90a:	b8 2c       	mov	r11, r8
 90c:	01 c0       	rjmp	.+2      	; 0x910 <__stack+0xb1>
 90e:	b9 2c       	mov	r11, r9
 910:	a4 fe       	sbrs	r10, 4
 912:	0f c0       	rjmp	.+30     	; 0x932 <__stack+0xd3>
 914:	fe 01       	movw	r30, r28
 916:	e8 0d       	add	r30, r8
 918:	f1 1d       	adc	r31, r1
 91a:	80 81       	ld	r24, Z
 91c:	80 33       	cpi	r24, 0x30	; 48
 91e:	21 f4       	brne	.+8      	; 0x928 <__stack+0xc9>
 920:	9a 2d       	mov	r25, r10
 922:	99 7e       	andi	r25, 0xE9	; 233
 924:	a9 2e       	mov	r10, r25
 926:	09 c0       	rjmp	.+18     	; 0x93a <__stack+0xdb>
 928:	a2 fe       	sbrs	r10, 2
 92a:	06 c0       	rjmp	.+12     	; 0x938 <__stack+0xd9>
 92c:	b3 94       	inc	r11
 92e:	b3 94       	inc	r11
 930:	04 c0       	rjmp	.+8      	; 0x93a <__stack+0xdb>
 932:	8a 2d       	mov	r24, r10
 934:	86 78       	andi	r24, 0x86	; 134
 936:	09 f0       	breq	.+2      	; 0x93a <__stack+0xdb>
 938:	b3 94       	inc	r11
 93a:	a3 fc       	sbrc	r10, 3
 93c:	11 c0       	rjmp	.+34     	; 0x960 <__stack+0x101>
 93e:	a0 fe       	sbrs	r10, 0
 940:	06 c0       	rjmp	.+12     	; 0x94e <__stack+0xef>
 942:	b2 14       	cp	r11, r2
 944:	88 f4       	brcc	.+34     	; 0x968 <__stack+0x109>
 946:	28 0c       	add	r2, r8
 948:	92 2c       	mov	r9, r2
 94a:	9b 18       	sub	r9, r11
 94c:	0e c0       	rjmp	.+28     	; 0x96a <__stack+0x10b>
 94e:	b2 14       	cp	r11, r2
 950:	60 f4       	brcc	.+24     	; 0x96a <__stack+0x10b>
 952:	b6 01       	movw	r22, r12
 954:	80 e2       	ldi	r24, 0x20	; 32
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 95c:	b3 94       	inc	r11
 95e:	f7 cf       	rjmp	.-18     	; 0x94e <__stack+0xef>
 960:	b2 14       	cp	r11, r2
 962:	18 f4       	brcc	.+6      	; 0x96a <__stack+0x10b>
 964:	2b 18       	sub	r2, r11
 966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x10d>
 968:	98 2c       	mov	r9, r8
 96a:	21 2c       	mov	r2, r1
 96c:	a4 fe       	sbrs	r10, 4
 96e:	10 c0       	rjmp	.+32     	; 0x990 <__stack+0x131>
 970:	b6 01       	movw	r22, r12
 972:	80 e3       	ldi	r24, 0x30	; 48
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 97a:	a2 fe       	sbrs	r10, 2
 97c:	17 c0       	rjmp	.+46     	; 0x9ac <__stack+0x14d>
 97e:	a1 fc       	sbrc	r10, 1
 980:	03 c0       	rjmp	.+6      	; 0x988 <__stack+0x129>
 982:	88 e7       	ldi	r24, 0x78	; 120
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	02 c0       	rjmp	.+4      	; 0x98c <__stack+0x12d>
 988:	88 e5       	ldi	r24, 0x58	; 88
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	b6 01       	movw	r22, r12
 98e:	0c c0       	rjmp	.+24     	; 0x9a8 <__stack+0x149>
 990:	8a 2d       	mov	r24, r10
 992:	86 78       	andi	r24, 0x86	; 134
 994:	59 f0       	breq	.+22     	; 0x9ac <__stack+0x14d>
 996:	a1 fe       	sbrs	r10, 1
 998:	02 c0       	rjmp	.+4      	; 0x99e <__stack+0x13f>
 99a:	8b e2       	ldi	r24, 0x2B	; 43
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <__stack+0x141>
 99e:	80 e2       	ldi	r24, 0x20	; 32
 9a0:	a7 fc       	sbrc	r10, 7
 9a2:	8d e2       	ldi	r24, 0x2D	; 45
 9a4:	b6 01       	movw	r22, r12
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 9ac:	89 14       	cp	r8, r9
 9ae:	38 f4       	brcc	.+14     	; 0x9be <__stack+0x15f>
 9b0:	b6 01       	movw	r22, r12
 9b2:	80 e3       	ldi	r24, 0x30	; 48
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 9ba:	9a 94       	dec	r9
 9bc:	f7 cf       	rjmp	.-18     	; 0x9ac <__stack+0x14d>
 9be:	8a 94       	dec	r8
 9c0:	f3 01       	movw	r30, r6
 9c2:	e8 0d       	add	r30, r8
 9c4:	f1 1d       	adc	r31, r1
 9c6:	80 81       	ld	r24, Z
 9c8:	b6 01       	movw	r22, r12
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 9d0:	81 10       	cpse	r8, r1
 9d2:	f5 cf       	rjmp	.-22     	; 0x9be <__stack+0x15f>
 9d4:	22 20       	and	r2, r2
 9d6:	09 f4       	brne	.+2      	; 0x9da <__stack+0x17b>
 9d8:	42 ce       	rjmp	.-892    	; 0x65e <vfprintf+0x24>
 9da:	b6 01       	movw	r22, r12
 9dc:	80 e2       	ldi	r24, 0x20	; 32
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	0e 94 14 05 	call	0xa28	; 0xa28 <fputc>
 9e4:	2a 94       	dec	r2
 9e6:	f6 cf       	rjmp	.-20     	; 0x9d4 <__stack+0x175>
 9e8:	f6 01       	movw	r30, r12
 9ea:	86 81       	ldd	r24, Z+6	; 0x06
 9ec:	97 81       	ldd	r25, Z+7	; 0x07
 9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <__stack+0x195>
 9f0:	8f ef       	ldi	r24, 0xFF	; 255
 9f2:	9f ef       	ldi	r25, 0xFF	; 255
 9f4:	2b 96       	adiw	r28, 0x0b	; 11
 9f6:	e2 e1       	ldi	r30, 0x12	; 18
 9f8:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__epilogue_restores__>

000009fc <strnlen_P>:
 9fc:	fc 01       	movw	r30, r24
 9fe:	05 90       	lpm	r0, Z+
 a00:	61 50       	subi	r22, 0x01	; 1
 a02:	70 40       	sbci	r23, 0x00	; 0
 a04:	01 10       	cpse	r0, r1
 a06:	d8 f7       	brcc	.-10     	; 0x9fe <strnlen_P+0x2>
 a08:	80 95       	com	r24
 a0a:	90 95       	com	r25
 a0c:	8e 0f       	add	r24, r30
 a0e:	9f 1f       	adc	r25, r31
 a10:	08 95       	ret

00000a12 <strnlen>:
 a12:	fc 01       	movw	r30, r24
 a14:	61 50       	subi	r22, 0x01	; 1
 a16:	70 40       	sbci	r23, 0x00	; 0
 a18:	01 90       	ld	r0, Z+
 a1a:	01 10       	cpse	r0, r1
 a1c:	d8 f7       	brcc	.-10     	; 0xa14 <strnlen+0x2>
 a1e:	80 95       	com	r24
 a20:	90 95       	com	r25
 a22:	8e 0f       	add	r24, r30
 a24:	9f 1f       	adc	r25, r31
 a26:	08 95       	ret

00000a28 <fputc>:
 a28:	0f 93       	push	r16
 a2a:	1f 93       	push	r17
 a2c:	cf 93       	push	r28
 a2e:	df 93       	push	r29
 a30:	fb 01       	movw	r30, r22
 a32:	23 81       	ldd	r18, Z+3	; 0x03
 a34:	21 fd       	sbrc	r18, 1
 a36:	03 c0       	rjmp	.+6      	; 0xa3e <fputc+0x16>
 a38:	8f ef       	ldi	r24, 0xFF	; 255
 a3a:	9f ef       	ldi	r25, 0xFF	; 255
 a3c:	2c c0       	rjmp	.+88     	; 0xa96 <fputc+0x6e>
 a3e:	22 ff       	sbrs	r18, 2
 a40:	16 c0       	rjmp	.+44     	; 0xa6e <fputc+0x46>
 a42:	46 81       	ldd	r20, Z+6	; 0x06
 a44:	57 81       	ldd	r21, Z+7	; 0x07
 a46:	24 81       	ldd	r18, Z+4	; 0x04
 a48:	35 81       	ldd	r19, Z+5	; 0x05
 a4a:	42 17       	cp	r20, r18
 a4c:	53 07       	cpc	r21, r19
 a4e:	44 f4       	brge	.+16     	; 0xa60 <fputc+0x38>
 a50:	a0 81       	ld	r26, Z
 a52:	b1 81       	ldd	r27, Z+1	; 0x01
 a54:	9d 01       	movw	r18, r26
 a56:	2f 5f       	subi	r18, 0xFF	; 255
 a58:	3f 4f       	sbci	r19, 0xFF	; 255
 a5a:	31 83       	std	Z+1, r19	; 0x01
 a5c:	20 83       	st	Z, r18
 a5e:	8c 93       	st	X, r24
 a60:	26 81       	ldd	r18, Z+6	; 0x06
 a62:	37 81       	ldd	r19, Z+7	; 0x07
 a64:	2f 5f       	subi	r18, 0xFF	; 255
 a66:	3f 4f       	sbci	r19, 0xFF	; 255
 a68:	37 83       	std	Z+7, r19	; 0x07
 a6a:	26 83       	std	Z+6, r18	; 0x06
 a6c:	14 c0       	rjmp	.+40     	; 0xa96 <fputc+0x6e>
 a6e:	8b 01       	movw	r16, r22
 a70:	ec 01       	movw	r28, r24
 a72:	fb 01       	movw	r30, r22
 a74:	00 84       	ldd	r0, Z+8	; 0x08
 a76:	f1 85       	ldd	r31, Z+9	; 0x09
 a78:	e0 2d       	mov	r30, r0
 a7a:	09 95       	icall
 a7c:	89 2b       	or	r24, r25
 a7e:	e1 f6       	brne	.-72     	; 0xa38 <fputc+0x10>
 a80:	d8 01       	movw	r26, r16
 a82:	16 96       	adiw	r26, 0x06	; 6
 a84:	8d 91       	ld	r24, X+
 a86:	9c 91       	ld	r25, X
 a88:	17 97       	sbiw	r26, 0x07	; 7
 a8a:	01 96       	adiw	r24, 0x01	; 1
 a8c:	17 96       	adiw	r26, 0x07	; 7
 a8e:	9c 93       	st	X, r25
 a90:	8e 93       	st	-X, r24
 a92:	16 97       	sbiw	r26, 0x06	; 6
 a94:	ce 01       	movw	r24, r28
 a96:	df 91       	pop	r29
 a98:	cf 91       	pop	r28
 a9a:	1f 91       	pop	r17
 a9c:	0f 91       	pop	r16
 a9e:	08 95       	ret

00000aa0 <__ultoa_invert>:
 aa0:	fa 01       	movw	r30, r20
 aa2:	aa 27       	eor	r26, r26
 aa4:	28 30       	cpi	r18, 0x08	; 8
 aa6:	51 f1       	breq	.+84     	; 0xafc <__ultoa_invert+0x5c>
 aa8:	20 31       	cpi	r18, 0x10	; 16
 aaa:	81 f1       	breq	.+96     	; 0xb0c <__ultoa_invert+0x6c>
 aac:	e8 94       	clt
 aae:	6f 93       	push	r22
 ab0:	6e 7f       	andi	r22, 0xFE	; 254
 ab2:	6e 5f       	subi	r22, 0xFE	; 254
 ab4:	7f 4f       	sbci	r23, 0xFF	; 255
 ab6:	8f 4f       	sbci	r24, 0xFF	; 255
 ab8:	9f 4f       	sbci	r25, 0xFF	; 255
 aba:	af 4f       	sbci	r26, 0xFF	; 255
 abc:	b1 e0       	ldi	r27, 0x01	; 1
 abe:	3e d0       	rcall	.+124    	; 0xb3c <__ultoa_invert+0x9c>
 ac0:	b4 e0       	ldi	r27, 0x04	; 4
 ac2:	3c d0       	rcall	.+120    	; 0xb3c <__ultoa_invert+0x9c>
 ac4:	67 0f       	add	r22, r23
 ac6:	78 1f       	adc	r23, r24
 ac8:	89 1f       	adc	r24, r25
 aca:	9a 1f       	adc	r25, r26
 acc:	a1 1d       	adc	r26, r1
 ace:	68 0f       	add	r22, r24
 ad0:	79 1f       	adc	r23, r25
 ad2:	8a 1f       	adc	r24, r26
 ad4:	91 1d       	adc	r25, r1
 ad6:	a1 1d       	adc	r26, r1
 ad8:	6a 0f       	add	r22, r26
 ada:	71 1d       	adc	r23, r1
 adc:	81 1d       	adc	r24, r1
 ade:	91 1d       	adc	r25, r1
 ae0:	a1 1d       	adc	r26, r1
 ae2:	20 d0       	rcall	.+64     	; 0xb24 <__ultoa_invert+0x84>
 ae4:	09 f4       	brne	.+2      	; 0xae8 <__ultoa_invert+0x48>
 ae6:	68 94       	set
 ae8:	3f 91       	pop	r19
 aea:	2a e0       	ldi	r18, 0x0A	; 10
 aec:	26 9f       	mul	r18, r22
 aee:	11 24       	eor	r1, r1
 af0:	30 19       	sub	r19, r0
 af2:	30 5d       	subi	r19, 0xD0	; 208
 af4:	31 93       	st	Z+, r19
 af6:	de f6       	brtc	.-74     	; 0xaae <__ultoa_invert+0xe>
 af8:	cf 01       	movw	r24, r30
 afa:	08 95       	ret
 afc:	46 2f       	mov	r20, r22
 afe:	47 70       	andi	r20, 0x07	; 7
 b00:	40 5d       	subi	r20, 0xD0	; 208
 b02:	41 93       	st	Z+, r20
 b04:	b3 e0       	ldi	r27, 0x03	; 3
 b06:	0f d0       	rcall	.+30     	; 0xb26 <__ultoa_invert+0x86>
 b08:	c9 f7       	brne	.-14     	; 0xafc <__ultoa_invert+0x5c>
 b0a:	f6 cf       	rjmp	.-20     	; 0xaf8 <__ultoa_invert+0x58>
 b0c:	46 2f       	mov	r20, r22
 b0e:	4f 70       	andi	r20, 0x0F	; 15
 b10:	40 5d       	subi	r20, 0xD0	; 208
 b12:	4a 33       	cpi	r20, 0x3A	; 58
 b14:	18 f0       	brcs	.+6      	; 0xb1c <__ultoa_invert+0x7c>
 b16:	49 5d       	subi	r20, 0xD9	; 217
 b18:	31 fd       	sbrc	r19, 1
 b1a:	40 52       	subi	r20, 0x20	; 32
 b1c:	41 93       	st	Z+, r20
 b1e:	02 d0       	rcall	.+4      	; 0xb24 <__ultoa_invert+0x84>
 b20:	a9 f7       	brne	.-22     	; 0xb0c <__ultoa_invert+0x6c>
 b22:	ea cf       	rjmp	.-44     	; 0xaf8 <__ultoa_invert+0x58>
 b24:	b4 e0       	ldi	r27, 0x04	; 4
 b26:	a6 95       	lsr	r26
 b28:	97 95       	ror	r25
 b2a:	87 95       	ror	r24
 b2c:	77 95       	ror	r23
 b2e:	67 95       	ror	r22
 b30:	ba 95       	dec	r27
 b32:	c9 f7       	brne	.-14     	; 0xb26 <__ultoa_invert+0x86>
 b34:	00 97       	sbiw	r24, 0x00	; 0
 b36:	61 05       	cpc	r22, r1
 b38:	71 05       	cpc	r23, r1
 b3a:	08 95       	ret
 b3c:	9b 01       	movw	r18, r22
 b3e:	ac 01       	movw	r20, r24
 b40:	0a 2e       	mov	r0, r26
 b42:	06 94       	lsr	r0
 b44:	57 95       	ror	r21
 b46:	47 95       	ror	r20
 b48:	37 95       	ror	r19
 b4a:	27 95       	ror	r18
 b4c:	ba 95       	dec	r27
 b4e:	c9 f7       	brne	.-14     	; 0xb42 <__ultoa_invert+0xa2>
 b50:	62 0f       	add	r22, r18
 b52:	73 1f       	adc	r23, r19
 b54:	84 1f       	adc	r24, r20
 b56:	95 1f       	adc	r25, r21
 b58:	a0 1d       	adc	r26, r0
 b5a:	08 95       	ret

00000b5c <__prologue_saves__>:
 b5c:	2f 92       	push	r2
 b5e:	3f 92       	push	r3
 b60:	4f 92       	push	r4
 b62:	5f 92       	push	r5
 b64:	6f 92       	push	r6
 b66:	7f 92       	push	r7
 b68:	8f 92       	push	r8
 b6a:	9f 92       	push	r9
 b6c:	af 92       	push	r10
 b6e:	bf 92       	push	r11
 b70:	cf 92       	push	r12
 b72:	df 92       	push	r13
 b74:	ef 92       	push	r14
 b76:	ff 92       	push	r15
 b78:	0f 93       	push	r16
 b7a:	1f 93       	push	r17
 b7c:	cf 93       	push	r28
 b7e:	df 93       	push	r29
 b80:	cd b7       	in	r28, 0x3d	; 61
 b82:	de b7       	in	r29, 0x3e	; 62
 b84:	ca 1b       	sub	r28, r26
 b86:	db 0b       	sbc	r29, r27
 b88:	0f b6       	in	r0, 0x3f	; 63
 b8a:	f8 94       	cli
 b8c:	de bf       	out	0x3e, r29	; 62
 b8e:	0f be       	out	0x3f, r0	; 63
 b90:	cd bf       	out	0x3d, r28	; 61
 b92:	09 94       	ijmp

00000b94 <__epilogue_restores__>:
 b94:	2a 88       	ldd	r2, Y+18	; 0x12
 b96:	39 88       	ldd	r3, Y+17	; 0x11
 b98:	48 88       	ldd	r4, Y+16	; 0x10
 b9a:	5f 84       	ldd	r5, Y+15	; 0x0f
 b9c:	6e 84       	ldd	r6, Y+14	; 0x0e
 b9e:	7d 84       	ldd	r7, Y+13	; 0x0d
 ba0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ba2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ba4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ba6:	b9 84       	ldd	r11, Y+9	; 0x09
 ba8:	c8 84       	ldd	r12, Y+8	; 0x08
 baa:	df 80       	ldd	r13, Y+7	; 0x07
 bac:	ee 80       	ldd	r14, Y+6	; 0x06
 bae:	fd 80       	ldd	r15, Y+5	; 0x05
 bb0:	0c 81       	ldd	r16, Y+4	; 0x04
 bb2:	1b 81       	ldd	r17, Y+3	; 0x03
 bb4:	aa 81       	ldd	r26, Y+2	; 0x02
 bb6:	b9 81       	ldd	r27, Y+1	; 0x01
 bb8:	ce 0f       	add	r28, r30
 bba:	d1 1d       	adc	r29, r1
 bbc:	0f b6       	in	r0, 0x3f	; 63
 bbe:	f8 94       	cli
 bc0:	de bf       	out	0x3e, r29	; 62
 bc2:	0f be       	out	0x3f, r0	; 63
 bc4:	cd bf       	out	0x3d, r28	; 61
 bc6:	ed 01       	movw	r28, r26
 bc8:	08 95       	ret

00000bca <_exit>:
 bca:	f8 94       	cli

00000bcc <__stop_program>:
 bcc:	ff cf       	rjmp	.-2      	; 0xbcc <__stop_program>
